local mvec3_dir = mvector3.directionlocal tmp_rot1 = Rotation()local tmp_vec1 = Vector3()local tmp_vec2 = Vector3()SentryGunMovement = SentryGunMovement or class()SentryGunMovement.set_friendly_fire = PlayerMovement.set_friendly_fireSentryGunMovement.friendly_fire = PlayerMovement.friendly_firefunction SentryGunMovement:post_init()	self._ext_network = self._unit:network()	self._tweak = tweak_data.weapon[self._unit:base():get_name_id()]	if self._tweak.VELOCITY_COMPENSATION then		self._m_last_attention_pos = Vector3()		self._m_last_attention_vel = Vector3()	end		if self._tweak.enemy_turret then		local difficulty_index = tweak_data:difficulty_to_index(Global.game_settings.difficulty)		if managers.modifiers and managers.modifiers:check_boolean("TotalAnarchy") or difficulty_index == 8 then			self._rot_speed_mul = 1.25		elseif difficulty_index == 6 or difficulty_index == 7 then			self._rot_speed_mul = 1		else			self._rot_speed_mul = 0.75		end	end	self:set_team(managers.groupai:state():team_data(tweak_data.levels:get_default_team_ID("player")))endfunction SentryGunMovement:_update_activating(t, dt)	self:_upd_mutables()	if not self._unit:anim_is_playing(self._activation_anim_group_name_ids) then		if self._rearming then			self:_set_state("rearming")		else			self:_set_state("active")		end		self._unit:weapon():update_laser()		if self._lights_on_sequence_name then			self._unit:damage():run_sequence_simple(self._lights_on_sequence_name)		end	endend